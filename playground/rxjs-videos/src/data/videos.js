export const COURSES_LIST = [
  '00-introduction-to-reactive-programming',
  '01-creating-observable-from-stcrash',
  '02-operators-in-depth',
  '03-rxjs-subjects-and-multicasting-operators',
  '04-use-higher-order-observables-in-rxjs-effectively',
  '05-cycle.js-fundamentals',
  '06-step-by-step-async-javascript-with-rxjs'
]

export const VIDEOS = {
  '00-introduction-to-reactive-programming': [
    '01-egghead-rxjs-reactive-programming-what-is-rxjs.mp4',
    '02-egghead-rxjs-reactive-programming-using-an-event-stream-of-double-clicks.mp4',
    '03-egghead-rxjs-reactive-programming-why-choose-rxjs.mp4',
    '04-egghead-rxjs-reactive-programming-async-requests-and-responses-in-rxjs.mp4',
    '05-egghead-rxjs-reactive-programming-rendering-on-the-dom-with-rxjs.mp4',
    '06-egghead-rxjs-reactive-programming-new-requests-from-refresh-clicks.mp4',
    '07-egghead-rxjs-reactive-programming-clear-data-while-loading-with-rxjs-startwith.mp4',
    '08-egghead-rxjs-reactive-programming-sharing-network-requests-with-rxjs-merge.mp4',
    '09-egghead-rxjs-reactive-programming-using-cached-network-data-with-rxjs.mp4',
    '10-egghead-rxjs-reactive-programming-an-overview-of-reactive-concepts.mp4'
  ],
  '01-creating-observable-from-stcrash': [
    '01-let-s-learn-rxjs.mp4',
    '02-observables-are-almost-like-functions.mp4',
    '03-observables-push-compared-to-generator-functions-pull.mp4',
    '04-observables-can-throw-errors.mp4',
    '05-observables-can-complete.mp4',
    '06-creation-operator-of.mp4',
    '07-creation-operators-from-fromarray-frompromise.mp4',
    '08-creation-operators-fromeventpattern-fromevent.mp4',
    '09-creation-operators-empty-never-throw.mp4',
    '10-creation-operators-interval-and-timer.mp4',
    '11-creation-operator-create.mp4',
    '12-returning-subscriptions-from-the-subscribe-function.mp4',
    '13-observables-are-the-foundation-in-rxjs.mp4'
  ],
  '02-operators-in-depth': [
    '01-what-rxjs-operators-are.mp4',
    '02-marble-diagrams-in-ascii-form.mp4',
    '03-transformation-operator-map-and-mapto.mp4',
    '04-utility-operator-do.mp4',
    '05-filtering-operator-filter.mp4',
    '06-filtering-operators-take-first-skip.mp4',
    '07-filtering-operators-takelast-last.mp4',
    '08-combination-operators-concat-startwith.mp4',
    '09-combination-operator-merge.mp4',
    '10-combination-operator-combinelatest.mp4',
    '11-combination-operator-withlatestfrom.mp4',
    '12-combination-operator-zip.mp4',
    '13-transformation-operator-scan.mp4',
    '14-transformation-operator-buffer.mp4',
    '15-transformation-operators-delay-and-delaywhen.mp4',
    '16-transformation-operators-debounce-and-debouncetime.mp4',
    '17-filtering-operators-throttle-and-throttletime.mp4',
    '18-filtering-operators-distinct-and-distinctuntilchanged.mp4',
    '19-error-handling-operator-catch.mp4',
    '20-error-handling-operator-retry-and-retrywhen.mp4',
    '21-transformation-operator-repeat.mp4',
    '22-more-operators-and-conclusion.mp4'
  ],
  '03-rxjs-subjects-and-multicasting-operators': [
    '01-an-observable-execution-may-only-have-one-observer.mp4',
    '02-subject-an-observable-and-observer-hybrid.mp4',
    '03-Transcript.md',
    '03-using-a-subject-as-an-event-bus.mp4',
    '04-behaviorsubject-representing-a-value-over-time.mp4',
    '05-replaysubject-remembering-events-from-the-past.mp4',
    '06-asyncsubject-representing-a-computation-that-yields-a-final-value.mp4',
    '07-connection-operator-multicast-and-connect.mp4',
    '08-stopping-a-shared-observable-execution.mp4',
    '09-refcount-automatically-starting-and-stopping-an-execution.mp4',
    '10-multicasting-shortcuts-publish-and-variants.mp4',
    '11-reusable-multicasting-with-subject-factories.mp4',
    '12-multicast-with-a-selector-argument-as-a-sandbox.mp4',
    '13-conclusion-when-to-use-subjects.mp4'
  ],
  '04-use-higher-order-observables-in-rxjs-effectively': [
    '01-get-started-with-higher-order-observables-in-rxjs.mp4',
    '02-flatten-a-higher-order-observable-with-rxjs-switch.mp4',
    '03-flatten-a-higher-order-observable-with-mergeall-in-rxjs.mp4',
    '04-flatten-a-higher-order-observable-with-concatall-in-rxjs.mp4',
    '05-use-rxjs-switchmap-to-map-and-flatten-higher-order-observables.mp4',
    '06-use-rxjs-mergemap-to-map-and-merge-high-order-observables.mp4',
    '07-use-rxjs-concatmap-to-map-and-concat-high-order-observables.mp4',
    '08-use-rxjs-mergemap-for-fine-grain-custom-behavior.mp4',
    '09-split-an-rxjs-observable-with-window.mp4',
    '10-split-an-rxjs-observable-conditionally-with-windowtoggle.mp4',
    '11-group-higher-order-observables-with-rxjs-groupby.mp4',
    '12-use-groupby-in-real-rxjs-applications.mp4'
  ],
  '05-cycle.js-fundamentals': [
    '01-egghead-rxjs-the-cycle-js-principle-separating-logic-from-effects.mp4',
    '02-egghead-rxjs-main-function-and-effects-functions.mp4',
    '03-egghead-rxjs-customizing-effects-from-the-main-function.mp4'
  ],
  '06-step-by-step-async-javascript-with-rxjs': [
    '01-egghead-rxjs-starting-a-stream-with-switchmap.mp4',
    '02-egghead-rxjs-stopping-a-stream-with-takeuntil.mp4',
    '03-egghead-rxjs-updating-data-with-scan.mp4',
    '04-egghead-rxjs-displaying-initial-data-with-startwith.mp4',
    '05-egghead-rxjs-changing-behavior-with-mapto.mp4',
    '06-egghead-rxjs-handling-multiple-streams-with-merge.mp4',
    '07-egghead-rxjs-refactoring-composable-streams-in-rxjs.mp4',
    '08-egghead-rxjs-getting-input-text-with-map.mp4',
    '09-egghead-rxjs-combining-streams-with-combinelatest.mp4',
    '10-egghead-rxjs-adding-conditional-logic-with-filter.mp4',
    '11-egghead-rxjs-completing-a-stream-with-takewhile.mp4',
    '12-egghead-rxjs-handling-a-complete-stream-with-reduce.mp4',
    '13-egghead-rxjs-logging-a-stream-with-do.mp4',
    '14-egghead-rxjs-timer-and-input-recap.mp4',
    '15-egghead-rxjs-refactoring-combinelatest-to-withlatestfrom.mp4',
    '16-egghead-rxjs-resubscribing-to-a-stream-with-repeat.mp4',
    '17-egghead-rxjs-basic-dom-rendering-with-subscribe.mp4',
    '18-egghead-rxjs-sharing-streams-with-share.mp4'
  ]
}
